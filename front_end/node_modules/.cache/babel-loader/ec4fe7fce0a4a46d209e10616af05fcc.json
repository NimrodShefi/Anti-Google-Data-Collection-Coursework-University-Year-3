{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\c1989618\\\\Documents\\\\term_1\\\\coursework\\\\project\\\\front_end\\\\src\\\\components\\\\Home.js\";\nimport './Home.css';\nimport React, { Component } from 'react';\nimport { sendData } from '../api/sendHttpRequests';\nimport { Link, Navigate } from 'react-router-dom';\nimport Cookies from 'universal-cookie';\nimport { GoogleLogout } from 'react-google-login';\nimport * as VARIABLES from '../VARIABLES';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      req_counter: 0,\n      user_name: null\n    };\n  }\n\n  render() {\n    const cookies = new Cookies(); // should the login cookie not exist, the try will fail, which will activate the catch. In thte catch, the app will reload the login page\n\n    try {\n      var user_details = sendData('http://localhost:3001/user_details', cookies.get('session-data').sessionId);\n      user_details.then(response => {\n        return response.json();\n      }).then(parsedData => {\n        if (this.state.user_name === null) {\n          // used this: https://reactjs.org/docs/react-component.html#componentdidupdate\n          this.setState({\n            user_name: parsedData.full_name\n          });\n        }\n      });\n      return /*#__PURE__*/_jsxDEV(LoggedIn, {\n        user_name: this.state.user_name,\n        successfulGoogleLogout: this.successfulGoogleLogout,\n        failedGoogleLogout: this.failedGoogleLogout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this);\n    } catch (error) {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nfunction webRequests(apiTimeout) {\n  const cookies = new Cookies();\n\n  try {\n    // used this to help me: https://stackoverflow.com/questions/46140764/polling-api-every-x-seconds-with-react/63134447#63134447\n    sendData('http://localhost:3001/send_request', {\n      sessionId: cookies.get('session-data').sessionId\n    }).then(res => {\n      if (res.status === 200) {\n        // if the request was successfull\n        document.getElementById('request_counter').value = VARIABLES.addToReqCounter();\n\n        if (!VARIABLES.web_req_status_button) {\n          // if the user wants to continue --> have to check for false and not true, as when I am changin teh buttons, those are the values I'm using\n          apiTimeout = setTimeout(() => {\n            webRequests(apiTimeout);\n          }, 10000);\n        } else {\n          clearTimeout(apiTimeout);\n        }\n      } else {\n        clearTimeout(apiTimeout);\n      }\n    });\n  } catch (error) {}\n}\n\nfunction LoggedIn(props) {\n  const user_name = props.user_name;\n\n  const successfulGoogleLogout = response => {\n    const cookies = new Cookies();\n    var data = sendData('http://localhost:3001/logout', cookies.get('session-data').sessionId);\n    data.then(response => {\n      if (response.status === 200) {\n        cookies.remove('session-data');\n        document.getElementById('navigate').click();\n      } else {\n        const element = document.getElementById('message');\n        element.innerHTML = 'Something went wrong. Please try again later';\n      }\n    });\n  };\n\n  const failedGoogleLogout = response => {\n    const element = document.getElementById('message');\n    element.innerHTML = 'Failed Logout. Please try again later';\n  };\n\n  const startWebRequest = () => {\n    var button = document.getElementById('web_requests_status');\n\n    if (button.value === 'false') {\n      changeValue(button, 'green', 'Start Process', true);\n    } else {\n      changeValue(button, 'red', 'Pause Process', false);\n      let apiTimeout = setTimeout(() => {\n        webRequests(apiTimeout);\n      }, 10000);\n    }\n  };\n\n  const changeValue = (button, backgroundColor, buttonText, buttonStatus) => {\n    button.style.backgroundColor = backgroundColor;\n    button.innerText = buttonText;\n    VARIABLES.setWebReqStatusButton(buttonStatus);\n    button.value = VARIABLES.web_req_status_button;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"welcome_user\",\n      children: [\"Welcome \", user_name, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"websites_visited\",\n        className: \"wrap-flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Visited Websites: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"request_counter\",\n          value: VARIABLES.req_counter,\n          type: \"text\",\n          \"aria-label\": \"request counter\",\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        \"aria-label\": \"logout section\",\n        children: [/*#__PURE__*/_jsxDEV(GoogleLogout, {\n          clientId: \"919197055743-cr391ut1ptdgkaj5e06tb8icgi1477di.apps.googleusercontent.com\",\n          buttonText: \"Logout\",\n          onLogoutSuccess: successfulGoogleLogout,\n          onFailure: failedGoogleLogout,\n          alt: \"logout button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          id: \"navigate\",\n          to: \"/\",\n          hidden: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"message\",\n          \"aria-label\": \"logout status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"web_requests_status\",\n        \"aria-label\": \"web request status button\",\n        onClick: startWebRequest,\n        children: \"Start Process\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this);\n}\n\n_c = LoggedIn;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoggedIn\");","map":{"version":3,"sources":["C:/Users/c1989618/Documents/term_1/coursework/project/front_end/src/components/Home.js"],"names":["React","Component","sendData","Link","Navigate","Cookies","GoogleLogout","VARIABLES","Home","constructor","props","state","req_counter","user_name","render","cookies","user_details","get","sessionId","then","response","json","parsedData","setState","full_name","successfulGoogleLogout","failedGoogleLogout","error","webRequests","apiTimeout","res","status","document","getElementById","value","addToReqCounter","web_req_status_button","setTimeout","clearTimeout","LoggedIn","data","remove","click","element","innerHTML","startWebRequest","button","changeValue","backgroundColor","buttonText","buttonStatus","style","innerText","setWebReqStatusButton"],"mappings":"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","sourcesContent":["import './Home.css';\r\nimport React, { Component } from 'react';\r\nimport { sendData } from '../api/sendHttpRequests';\r\nimport { Link, Navigate } from 'react-router-dom';\r\nimport Cookies from 'universal-cookie';\r\nimport { GoogleLogout } from 'react-google-login';\r\nimport * as VARIABLES from '../VARIABLES';\r\n\r\nexport class Home extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            req_counter: 0,\r\n            user_name: null,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const cookies = new Cookies();\r\n        // should the login cookie not exist, the try will fail, which will activate the catch. In thte catch, the app will reload the login page\r\n        try {\r\n            var user_details = sendData('http://localhost:3001/user_details', cookies.get('session-data').sessionId);\r\n\r\n            user_details\r\n                .then(response => {\r\n                    return response.json();\r\n                })\r\n                .then(parsedData => {\r\n                    if (this.state.user_name === null) { // used this: https://reactjs.org/docs/react-component.html#componentdidupdate\r\n                        this.setState({\r\n                            user_name: parsedData.full_name\r\n                        });\r\n                    }\r\n                });\r\n\r\n            return (\r\n                <LoggedIn user_name={this.state.user_name} successfulGoogleLogout={this.successfulGoogleLogout} failedGoogleLogout={this.failedGoogleLogout} />\r\n            )\r\n        } catch (error) {\r\n            return (\r\n                <Navigate to='/' />\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nfunction webRequests(apiTimeout) {\r\n    const cookies = new Cookies();\r\n    try { // used this to help me: https://stackoverflow.com/questions/46140764/polling-api-every-x-seconds-with-react/63134447#63134447\r\n        sendData('http://localhost:3001/send_request', { sessionId: cookies.get('session-data').sessionId })\r\n            .then(res => {\r\n                if (res.status === 200) { // if the request was successfull\r\n                    \r\n                    document.getElementById('request_counter').value = VARIABLES.addToReqCounter();\r\n                    if (!VARIABLES.web_req_status_button) { // if the user wants to continue --> have to check for false and not true, as when I am changin teh buttons, those are the values I'm using\r\n                        apiTimeout = setTimeout(() => {\r\n                            webRequests(apiTimeout)\r\n                        }, 10000);\r\n                    } else {\r\n                        clearTimeout(apiTimeout);\r\n                    }\r\n                } else {\r\n                    clearTimeout(apiTimeout);\r\n                }\r\n            });\r\n    } catch (error) {\r\n\r\n    }\r\n\r\n}\r\n\r\nfunction LoggedIn(props) {\r\n\r\n    const user_name = props.user_name;\r\n\r\n    const successfulGoogleLogout = (response) => {\r\n        const cookies = new Cookies();\r\n        var data = sendData('http://localhost:3001/logout', cookies.get('session-data').sessionId);\r\n        data\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    cookies.remove('session-data');\r\n                    document.getElementById('navigate').click();\r\n                } else {\r\n                    const element = document.getElementById('message');\r\n                    element.innerHTML = 'Something went wrong. Please try again later';\r\n                }\r\n            })\r\n    }\r\n\r\n    const failedGoogleLogout = (response) => {\r\n        const element = document.getElementById('message');\r\n        element.innerHTML = 'Failed Logout. Please try again later';\r\n    }\r\n\r\n    const startWebRequest = () => {\r\n        var button = document.getElementById('web_requests_status');\r\n        if (button.value === 'false') {\r\n            changeValue(button, 'green', 'Start Process', true);\r\n        } else {\r\n            changeValue(button, 'red', 'Pause Process', false);\r\n            let apiTimeout = setTimeout(() => {\r\n                webRequests(apiTimeout)\r\n            }, 10000);\r\n        }\r\n    }\r\n\r\n    const changeValue = (button, backgroundColor, buttonText, buttonStatus) => {\r\n        button.style.backgroundColor = backgroundColor;\r\n        button.innerText = buttonText;\r\n        VARIABLES.setWebReqStatusButton(buttonStatus);\r\n        button.value = VARIABLES.web_req_status_button;\r\n    }\r\n\r\n    return (\r\n        <div className='body'>\r\n\r\n            <h1 id='welcome_user'>Welcome {user_name}!</h1>\r\n            <br />\r\n\r\n            <div className='left'>\r\n                <div id='websites_visited' className='wrap-flex'>\r\n                    <h3>Visited Websites: </h3>\r\n                    <input id='request_counter' value={VARIABLES.req_counter} type='text' aria-label='request counter' disabled />\r\n                </div>\r\n                <div aria-label='logout section'>\r\n                    <GoogleLogout\r\n                        clientId='919197055743-cr391ut1ptdgkaj5e06tb8icgi1477di.apps.googleusercontent.com'\r\n                        buttonText='Logout'\r\n                        onLogoutSuccess={successfulGoogleLogout}\r\n                        onFailure={failedGoogleLogout}\r\n                        alt='logout button'\r\n                    />\r\n                    <Link id='navigate' to='/' hidden />\r\n                    <p id='message' aria-label='logout status'></p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='right'>\r\n                <button id='web_requests_status' aria-label='web request status button' onClick={startWebRequest}>Start Process</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}