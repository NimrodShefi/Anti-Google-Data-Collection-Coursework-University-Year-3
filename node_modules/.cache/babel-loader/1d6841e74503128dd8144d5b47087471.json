{"ast":null,"code":"export function sendData(url, body) {\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      info: data\n    })\n  };\n  var info = fetch(url, requestOptions).then(response => {\n    return response;\n  }).catch(err => console.log(\"error: \" + err));\n  return info;\n}\nexport function sendLoginData(url, body) {\n  var data = encryptData(body);\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      info: data\n    })\n  };\n  var info = fetch(url, requestOptions).then(response => {\n    return response;\n  }).catch(err => console.log(\"error: \" + err));\n  return info;\n}\nexport function getData(url) {\n  var info = fetch(url).then(response => {\n    return response.json();\n  }).catch(err => console.error(\"error: \" + err));\n  return info;\n}\n\nfunction encryptData(data) {\n  var CryptoJS = require(\"crypto-js\");\n\n  var ciphertext = CryptoJS.AES.encrypt(JSON.stringify(data), 'my-secret-key@123').toString();\n  return ciphertext;\n}\n\nfunction decryptData(data) {\n  var CryptoJS = require(\"crypto-js\");\n\n  var bytes = CryptoJS.AES.decrypt(data, 'my-secret-key@123');\n  var decryptedData = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n  return decryptedData;\n}","map":{"version":3,"sources":["C:/Users/c1989618/Documents/term_1/coursework/project/front_end/src/api/sendHttpRequests.js"],"names":["sendData","url","body","requestOptions","method","headers","JSON","stringify","info","data","fetch","then","response","catch","err","console","log","sendLoginData","encryptData","getData","json","error","CryptoJS","require","ciphertext","AES","encrypt","toString","decryptData","bytes","decrypt","decryptedData","parse","enc","Utf8"],"mappings":"AAAA,OAAO,SAASA,QAAT,CAAkBC,GAAlB,EAAuBC,IAAvB,EAA6B;AAChC,QAAMC,cAAc,GAAG;AACnBC,IAAAA,MAAM,EAAE,MADW;AAEnBC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAFU;AAKnBH,IAAAA,IAAI,EAAEI,IAAI,CAACC,SAAL,CAAe;AAAEC,MAAAA,IAAI,EAAEC;AAAR,KAAf;AALa,GAAvB;AAOA,MAAID,IAAI,GAAGE,KAAK,CAACT,GAAD,EAAME,cAAN,CAAL,CACNQ,IADM,CACDC,QAAQ,IAAI;AACd,WAAOA,QAAP;AACH,GAHM,EAINC,KAJM,CAIAC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAY,YAAYF,GAAxB,CAJP,CAAX;AAKA,SAAON,IAAP;AACH;AAED,OAAO,SAASS,aAAT,CAAuBhB,GAAvB,EAA4BC,IAA5B,EAAkC;AACrC,MAAIO,IAAI,GAAGS,WAAW,CAAChB,IAAD,CAAtB;AAEA,QAAMC,cAAc,GAAG;AACnBC,IAAAA,MAAM,EAAE,MADW;AAEnBC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAFU;AAKnBH,IAAAA,IAAI,EAAEI,IAAI,CAACC,SAAL,CAAe;AAAEC,MAAAA,IAAI,EAAEC;AAAR,KAAf;AALa,GAAvB;AAOA,MAAID,IAAI,GAAGE,KAAK,CAACT,GAAD,EAAME,cAAN,CAAL,CACNQ,IADM,CACDC,QAAQ,IAAI;AACd,WAAOA,QAAP;AACH,GAHM,EAINC,KAJM,CAIAC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAY,YAAYF,GAAxB,CAJP,CAAX;AAKA,SAAON,IAAP;AACH;AAED,OAAO,SAASW,OAAT,CAAiBlB,GAAjB,EAAsB;AACzB,MAAIO,IAAI,GAAGE,KAAK,CAACT,GAAD,CAAL,CACNU,IADM,CACDC,QAAQ,IAAI;AACd,WAAOA,QAAQ,CAACQ,IAAT,EAAP;AACH,GAHM,EAINP,KAJM,CAIAC,GAAG,IAAIC,OAAO,CAACM,KAAR,CAAc,YAAYP,GAA1B,CAJP,CAAX;AAMA,SAAON,IAAP;AACH;;AAGD,SAASU,WAAT,CAAqBT,IAArB,EAA2B;AACvB,MAAIa,QAAQ,GAAGC,OAAO,CAAC,WAAD,CAAtB;;AACA,MAAIC,UAAU,GAAGF,QAAQ,CAACG,GAAT,CAAaC,OAAb,CAAqBpB,IAAI,CAACC,SAAL,CAAeE,IAAf,CAArB,EAA2C,mBAA3C,EAAgEkB,QAAhE,EAAjB;AAEA,SAAOH,UAAP;AACH;;AAED,SAASI,WAAT,CAAqBnB,IAArB,EAA0B;AACtB,MAAIa,QAAQ,GAAGC,OAAO,CAAC,WAAD,CAAtB;;AACA,MAAIM,KAAK,GAAGP,QAAQ,CAACG,GAAT,CAAaK,OAAb,CAAqBrB,IAArB,EAA2B,mBAA3B,CAAZ;AACA,MAAIsB,aAAa,GAAGzB,IAAI,CAAC0B,KAAL,CAAWH,KAAK,CAACF,QAAN,CAAeL,QAAQ,CAACW,GAAT,CAAaC,IAA5B,CAAX,CAApB;AAEA,SAAOH,aAAP;AACH","sourcesContent":["export function sendData(url, body) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ info: data })\r\n    };\r\n    var info = fetch(url, requestOptions)\r\n        .then(response => {\r\n            return response;\r\n        })\r\n        .catch(err => console.log(\"error: \" + err));\r\n    return info;\r\n}\r\n\r\nexport function sendLoginData(url, body) {\r\n    var data = encryptData(body);\r\n\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ info: data })\r\n    };\r\n    var info = fetch(url, requestOptions)\r\n        .then(response => {\r\n            return response;\r\n        })\r\n        .catch(err => console.log(\"error: \" + err));\r\n    return info;\r\n}\r\n\r\nexport function getData(url) {\r\n    var info = fetch(url)\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.error(\"error: \" + err));\r\n\r\n    return info;\r\n}\r\n\r\n\r\nfunction encryptData(data) {\r\n    var CryptoJS = require(\"crypto-js\");\r\n    var ciphertext = CryptoJS.AES.encrypt(JSON.stringify(data), 'my-secret-key@123').toString();\r\n\r\n    return ciphertext;\r\n}\r\n\r\nfunction decryptData(data){\r\n    var CryptoJS = require(\"crypto-js\");\r\n    var bytes = CryptoJS.AES.decrypt(data, 'my-secret-key@123');\r\n    var decryptedData = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\r\n\r\n    return decryptedData;\r\n}"]},"metadata":{},"sourceType":"module"}