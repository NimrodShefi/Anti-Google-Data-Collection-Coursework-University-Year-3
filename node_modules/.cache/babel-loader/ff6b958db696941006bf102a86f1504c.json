{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\c1989618\\\\Documents\\\\term_1\\\\coursework\\\\project\\\\front_end\\\\src\\\\components\\\\Home.js\";\nimport './Home.css';\nimport React, { Component } from 'react';\nimport { sendData, decryptData } from '../api/sendHttpRequests';\nimport { Link, Navigate } from 'react-router-dom';\nimport Cookies from 'universal-cookie';\nimport { GoogleLogout } from 'react-google-login';\nimport * as VARIABLES from '../VARIABLES';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      reqCounter: 0,\n      userName: null\n    };\n  }\n\n  render() {\n    const cookies = new Cookies(); // should the login cookie not exist, the try will fail, \n    // which will activate the catch. In thte catch, the app will reload the login page\n\n    try {\n      var userDetails = sendData('http://localhost:3001/user_details', cookies.get('session-data').sessionId);\n      userDetails.then(response => {\n        return response.json();\n      }).then(parsedData => {\n        if (this.state.userName === null) {\n          // used this: https://reactjs.org/docs/react-component.html#componentdidupdate\n          this.setState({\n            userName: decryptData(parsedData.fullName),\n            reqCounter: decryptData(parsedData.currentRequests)\n          });\n        }\n      });\n      return /*#__PURE__*/_jsxDEV(LoggedIn, {\n        userName: this.state.userName,\n        reqCounter: this.state.reqCounter,\n        successfulGoogleLogout: this.successfulGoogleLogout,\n        failedGoogleLogout: this.failedGoogleLogout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this);\n    } catch (error) {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nfunction webRequests(apiTimeout) {\n  const cookies = new Cookies();\n\n  try {\n    // used this to help me: https://stackoverflow.com/questions/46140764/polling-api-every-x-seconds-with-react/63134447#63134447\n    sendData('http://localhost:3001/send_request', cookies.get('session-data').sessionId).then(res => {\n      if (res.status === 200) {\n        // if the request was successfull\n        document.getElementById('requestCounter').value++; // if the user wants to continue --> \n        // have to check for false and not true, as when I am changin teh buttons, those are the values I'm using\n\n        if (!VARIABLES.webReqStatusButton) {\n          apiTimeout = setTimeout(() => {\n            webRequests(apiTimeout);\n          }, 5000);\n        } else {\n          clearTimeout(apiTimeout);\n        }\n      } else if (res.status === 402) {\n        clearTimeout(apiTimeout);\n        startWebRequest();\n        document.getElementById('statusMessage').innerHTML = 'subscription plan ended. Please logout';\n      } else {\n        clearTimeout(apiTimeout);\n      }\n    });\n  } catch (error) {}\n}\n\nfunction startWebRequest() {\n  var button = document.getElementById('webRequestsStatus');\n\n  if (button.value === 'false') {\n    ChangeValue(button, 'green', 'Start Process', true);\n  } else {\n    ChangeValue(button, 'red', 'Pause Process', false);\n    let apiTimeout = setTimeout(() => {\n      webRequests(apiTimeout);\n    }, 10000);\n  }\n}\n\nfunction ChangeValue(button, backgroundColor, buttonText, buttonStatus) {\n  button.style.backgroundColor = backgroundColor;\n  button.innerText = buttonText;\n  VARIABLES.setWebReqStatusButton(buttonStatus);\n  button.value = VARIABLES.webReqStatusButton;\n}\n\n_c = ChangeValue;\n\nfunction LoggedIn(props) {\n  const userName = props.userName;\n  const reqCounter = props.reqCounter;\n\n  const successfulGoogleLogout = response => {\n    const cookies = new Cookies();\n\n    try {\n      cookies.remove('session-data');\n      document.getElementById('navigate').click();\n    } catch (error) {\n      const element = document.getElementById('logoutMessage');\n      element.innerHTML = 'Something went wrong. Please try again later';\n    }\n  };\n\n  const failedGoogleLogout = response => {\n    const element = document.getElementById('logoutMessage');\n    element.innerHTML = 'Failed Logout. Please try again later';\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"welcomeUser\",\n      children: [\"Welcome \", userName, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"websitesVisited\",\n        className: \"wrap-flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Visited Websites: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"requestCounter\",\n          value: reqCounter,\n          type: \"text\",\n          \"aria-label\": \"request counter\",\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        \"aria-label\": \"logout section\",\n        children: [/*#__PURE__*/_jsxDEV(GoogleLogout, {\n          clientId: \"919197055743-cr391ut1ptdgkaj5e06tb8icgi1477di.apps.googleusercontent.com\",\n          buttonText: \"Logout\",\n          onLogoutSuccess: successfulGoogleLogout,\n          onFailure: failedGoogleLogout,\n          alt: \"logout button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          id: \"navigate\",\n          to: \"/\",\n          hidden: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"logoutMessage\",\n          \"aria-label\": \"logout status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"statusButton\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"webRequestsStatus\",\n          \"aria-label\": \"web request status button\",\n          onClick: startWebRequest,\n          children: \"Start Process\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"statusMsg\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"statusMessage\",\n          \"aria-label\": \"web requests status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = LoggedIn;\nexport default Home;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChangeValue\");\n$RefreshReg$(_c2, \"LoggedIn\");","map":{"version":3,"sources":["C:/Users/c1989618/Documents/term_1/coursework/project/front_end/src/components/Home.js"],"names":["React","Component","sendData","decryptData","Link","Navigate","Cookies","GoogleLogout","VARIABLES","Home","constructor","props","state","reqCounter","userName","render","cookies","userDetails","get","sessionId","then","response","json","parsedData","setState","fullName","currentRequests","successfulGoogleLogout","failedGoogleLogout","error","webRequests","apiTimeout","res","status","document","getElementById","value","webReqStatusButton","setTimeout","clearTimeout","startWebRequest","innerHTML","button","ChangeValue","backgroundColor","buttonText","buttonStatus","style","innerText","setWebReqStatusButton","LoggedIn","remove","click","element"],"mappings":"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","sourcesContent":["import './Home.css';\r\nimport React, { Component } from 'react';\r\nimport { sendData, decryptData } from '../api/sendHttpRequests';\r\nimport { Link, Navigate } from 'react-router-dom';\r\nimport Cookies from 'universal-cookie';\r\nimport { GoogleLogout } from 'react-google-login';\r\nimport * as VARIABLES from '../VARIABLES';\r\n\r\nexport class Home extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            reqCounter: 0,\r\n            userName: null,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const cookies = new Cookies();\r\n        // should the login cookie not exist, the try will fail, \r\n        // which will activate the catch. In thte catch, the app will reload the login page\r\n        try {\r\n            var userDetails = sendData('http://localhost:3001/user_details', cookies.get('session-data').sessionId);\r\n\r\n            userDetails\r\n                .then(response => {\r\n                    return response.json();\r\n                })\r\n                .then(parsedData => {\r\n                    if (this.state.userName === null) { // used this: https://reactjs.org/docs/react-component.html#componentdidupdate\r\n                        this.setState({\r\n                            userName: decryptData(parsedData.fullName),\r\n                            reqCounter: decryptData(parsedData.currentRequests)\r\n                        });\r\n                    }\r\n                });\r\n\r\n            return (\r\n                <LoggedIn userName={this.state.userName} reqCounter={this.state.reqCounter} \r\n                successfulGoogleLogout={this.successfulGoogleLogout} failedGoogleLogout={this.failedGoogleLogout} />\r\n            )\r\n        } catch (error) {\r\n            return (\r\n                <Navigate to='/' />\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nfunction webRequests(apiTimeout) {\r\n    const cookies = new Cookies();\r\n    try { // used this to help me: https://stackoverflow.com/questions/46140764/polling-api-every-x-seconds-with-react/63134447#63134447\r\n        sendData('http://localhost:3001/send_request', cookies.get('session-data').sessionId)\r\n            .then(res => {\r\n                if (res.status === 200) { // if the request was successfull\r\n                    document.getElementById('requestCounter').value++;\r\n                    // if the user wants to continue --> \r\n                    // have to check for false and not true, as when I am changin teh buttons, those are the values I'm using\r\n                    if (!VARIABLES.webReqStatusButton) { \r\n                        apiTimeout = setTimeout(() => {\r\n                            webRequests(apiTimeout)\r\n                        }, 5000);\r\n                    } else {\r\n                        clearTimeout(apiTimeout);\r\n                    }\r\n                } else if (res.status === 402) {\r\n                    clearTimeout(apiTimeout);\r\n                    startWebRequest();\r\n                    document.getElementById('statusMessage').innerHTML = 'subscription plan ended. Please logout';\r\n                }\r\n                else {\r\n                    clearTimeout(apiTimeout);\r\n                }\r\n            });\r\n    } catch (error) {\r\n\r\n    }\r\n\r\n}\r\n\r\nfunction startWebRequest() {\r\n    var button = document.getElementById('webRequestsStatus');\r\n    if (button.value === 'false') {\r\n        ChangeValue(button, 'green', 'Start Process', true);\r\n    } else {\r\n        ChangeValue(button, 'red', 'Pause Process', false);\r\n        let apiTimeout = setTimeout(() => {\r\n            webRequests(apiTimeout)\r\n        }, 10000);\r\n    }\r\n}\r\n\r\nfunction ChangeValue(button, backgroundColor, buttonText, buttonStatus) {\r\n    button.style.backgroundColor = backgroundColor;\r\n    button.innerText = buttonText;\r\n    VARIABLES.setWebReqStatusButton(buttonStatus);\r\n    button.value = VARIABLES.webReqStatusButton;\r\n}\r\n\r\nfunction LoggedIn(props) {\r\n\r\n    const userName = props.userName;\r\n    const reqCounter = props.reqCounter;\r\n\r\n    const successfulGoogleLogout = (response) => {\r\n        const cookies = new Cookies();\r\n        try {\r\n            cookies.remove('session-data');\r\n            document.getElementById('navigate').click();\r\n        } catch (error) {\r\n            const element = document.getElementById('logoutMessage');\r\n            element.innerHTML = 'Something went wrong. Please try again later';\r\n        }\r\n    }\r\n\r\n    const failedGoogleLogout = (response) => {\r\n        const element = document.getElementById('logoutMessage');\r\n        element.innerHTML = 'Failed Logout. Please try again later';\r\n    }\r\n    \r\n    return (\r\n        <div className='body'>\r\n\r\n            <h1 id='welcomeUser'>Welcome {userName}!</h1>\r\n            <br />\r\n\r\n            <div className='left'>\r\n                <div id='websitesVisited' className='wrap-flex'>\r\n                    <h3>Visited Websites: </h3>\r\n                    <input id='requestCounter' value={reqCounter} type='text' aria-label='request counter' disabled />\r\n                </div>\r\n                <div aria-label='logout section'>\r\n                    <GoogleLogout\r\n                        clientId='919197055743-cr391ut1ptdgkaj5e06tb8icgi1477di.apps.googleusercontent.com'\r\n                        buttonText='Logout'\r\n                        onLogoutSuccess={successfulGoogleLogout}\r\n                        onFailure={failedGoogleLogout}\r\n                        alt='logout button'\r\n                    />\r\n                    <Link id='navigate' to='/' hidden />\r\n                    <p id='logoutMessage' aria-label='logout status'></p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='right'>\r\n                <div className='statusButton'>\r\n                    <button id='webRequestsStatus' aria-label='web request status button' onClick={startWebRequest}>Start Process</button>\r\n                </div>\r\n                <div className='statusMsg'>\r\n                    <p id='statusMessage' aria-label='web requests status'></p>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}